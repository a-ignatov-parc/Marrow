"use strict";var TodoMVC=new Backbone.Marionette.Application;TodoMVC.addRegions({header:"#header",main:"#main",footer:"#footer"}),TodoMVC.on("initialize:after",function(){Backbone.history.start()}),TodoMVC.module("Todos",function(a,b,c){a.Todo=c.Model.extend({defaults:{title:"",completed:!1,created:0},initialize:function(){this.isNew()&&this.set("created",Date.now())},toggle:function(){return this.set("completed",!this.isCompleted())},isCompleted:function(){return this.get("completed")}}),a.TodoList=c.Collection.extend({model:a.Todo,localStorage:new c.LocalStorage("todos-backbone-marionette"),getCompleted:function(){return this.filter(this._isCompleted)},getActive:function(){return this.reject(this._isCompleted)},comparator:function(a){return a.get("created")},_isCompleted:function(a){return a.isCompleted()}})}),TodoMVC.module("Layout",function(a,b,c){a.Header=c.Marionette.ItemView.extend({template:"#template-header",ui:{input:"#new-todo"},events:{"keypress #new-todo":"onInputKeypress"},onInputKeypress:function(a){var b=13,c=this.ui.input.val().trim();a.which===b&&c&&(this.collection.create({title:c}),this.ui.input.val(""))}}),a.Footer=c.Marionette.Layout.extend({template:"#template-footer",ui:{count:"#todo-count strong",itemsString:"#todo-count span",filters:"#filters a",clearCompleted:"#clear-completed"},events:{"click #clear-completed":"onClearClick"},initialize:function(){this.listenTo(b.vent,"todoList:filter",this.updateFilterSelection,this),this.listenTo(this.collection,"all",this.updateCount,this)},onRender:function(){this.updateCount()},updateCount:function(){var a=this.collection.getActive().length,b=this.collection.length,c=b-a;this.ui.count.html(a),this.ui.itemsString.html(" "+(1===a?"item":"items")+" left"),this.$el.parent().toggle(b>0),c>0?(this.ui.clearCompleted.show(),this.ui.clearCompleted.html("Clear completed ("+c+")")):this.ui.clearCompleted.hide()},updateFilterSelection:function(a){this.ui.filters.removeClass("selected").filter('[href="#'+a+'"]').addClass("selected")},onClearClick:function(){var a=this.collection.getCompleted();a.forEach(function(a){a.destroy()})}})}),TodoMVC.module("TodoList.Views",function(a,b,c,d,e){a.ItemView=d.ItemView.extend({tagName:"li",template:"#template-todoItemView",ui:{edit:".edit"},events:{"click .destroy":"destroy","dblclick label":"onEditClick","keydown .edit":"onEditKeypress","focusout .edit":"onEditFocusout","click .toggle":"toggle"},initialize:function(){this.listenTo(this.model,"change",this.render,this)},onRender:function(){this.$el.removeClass("active completed"),this.model.get("completed")?this.$el.addClass("completed"):this.$el.addClass("active")},destroy:function(){this.model.destroy()},toggle:function(){this.model.toggle().save()},onEditClick:function(){this.$el.addClass("editing"),this.ui.edit.focus(),this.ui.edit.val(this.ui.edit.val())},onEditFocusout:function(){var a=this.ui.edit.val().trim();a?(this.model.set("title",a).save(),this.$el.removeClass("editing")):this.destroy()},onEditKeypress:function(a){var b=13,c=27;return a.which===b?(this.onEditFocusout(),void 0):(a.which===c&&this.$el.removeClass("editing"),void 0)}}),a.ListView=c.Marionette.CompositeView.extend({template:"#template-todoListCompositeView",itemView:a.ItemView,itemViewContainer:"#todo-list",ui:{toggle:"#toggle-all"},events:{"click #toggle-all":"onToggleAllClick"},initialize:function(){this.listenTo(this.collection,"all",this.update,this)},onRender:function(){this.update()},update:function(){function a(a,b){return a&&b.get("completed")}var b=this.collection.reduce(a,!0);this.ui.toggle.prop("checked",b),this.$el.parent().toggle(!!this.collection.length)},onToggleAllClick:function(a){var b=a.currentTarget.checked;this.collection.each(function(a){a.save({completed:b})})}}),b.vent.on("todoList:filter",function(a){a=a||"all",e("#todoapp").attr("class","filter-"+a)})}),TodoMVC.module("TodoList",function(a,b,c,d,e,f){a.Router=d.AppRouter.extend({appRoutes:{"*filter":"filterItems"}}),a.Controller=function(){this.todoList=new b.Todos.TodoList},f.extend(a.Controller.prototype,{start:function(){this.showHeader(this.todoList),this.showFooter(this.todoList),this.showTodoList(this.todoList),this.todoList.fetch()},showHeader:function(a){var c=new b.Layout.Header({collection:a});b.header.show(c)},showFooter:function(a){var c=new b.Layout.Footer({collection:a});b.footer.show(c)},showTodoList:function(c){b.main.show(new a.Views.ListView({collection:c}))},filterItems:function(a){b.vent.trigger("todoList:filter",a.trim()||"")}}),a.addInitializer(function(){var b=new a.Controller;b.router=new a.Router({controller:b}),b.start()})});