"use strict";var TodoMVC=new Backbone.Marionette.Application;TodoMVC.addRegions({header:"#header",main:"#main",footer:"#footer"}),TodoMVC.on("initialize:after",function(){Backbone.history.start()}),TodoMVC.module("Todos",function(t,e,i){t.Todo=i.Model.extend({defaults:{title:"",completed:!1,created:0},initialize:function(){this.isNew()&&this.set("created",Date.now())},toggle:function(){return this.set("completed",!this.isCompleted())},isCompleted:function(){return this.get("completed")}}),t.TodoList=i.Collection.extend({model:t.Todo,localStorage:new i.LocalStorage("todos-backbone-marionette"),getCompleted:function(){return this.filter(this._isCompleted)},getActive:function(){return this.reject(this._isCompleted)},comparator:function(t){return t.get("created")},_isCompleted:function(t){return t.isCompleted()}})}),TodoMVC.module("Layout",function(t,e,i){t.Header=i.Marionette.ItemView.extend({template:"#template-header",ui:{input:"#new-todo"},events:{"keypress #new-todo":"onInputKeypress"},onInputKeypress:function(t){var e=13,i=this.ui.input.val().trim();t.which===e&&i&&(this.collection.create({title:i}),this.ui.input.val(""))}}),t.Footer=i.Marionette.Layout.extend({template:"#template-footer",ui:{count:"#todo-count strong",itemsString:"#todo-count span",filters:"#filters a",clearCompleted:"#clear-completed"},events:{"click #clear-completed":"onClearClick"},initialize:function(){this.listenTo(e.vent,"todoList:filter",this.updateFilterSelection,this),this.listenTo(this.collection,"all",this.updateCount,this)},onRender:function(){this.updateCount()},updateCount:function(){var t=this.collection.getActive().length,e=this.collection.length,i=e-t;this.ui.count.html(t),this.ui.itemsString.html(" "+(1===t?"item":"items")+" left"),this.$el.parent().toggle(e>0),i>0?(this.ui.clearCompleted.show(),this.ui.clearCompleted.html("Clear completed ("+i+")")):this.ui.clearCompleted.hide()},updateFilterSelection:function(t){this.ui.filters.removeClass("selected").filter('[href="#'+t+'"]').addClass("selected")},onClearClick:function(){var t=this.collection.getCompleted();t.forEach(function(t){t.destroy()})}})}),TodoMVC.module("TodoList.Views",function(t,e,i,n,s){t.ItemView=n.ItemView.extend({tagName:"li",template:"#template-todoItemView",ui:{edit:".edit"},events:{"click .destroy":"destroy","dblclick label":"onEditClick","keydown .edit":"onEditKeypress","focusout .edit":"onEditFocusout","click .toggle":"toggle"},initialize:function(){this.listenTo(this.model,"change",this.render,this)},onRender:function(){this.$el.removeClass("active completed"),this.model.get("completed")?this.$el.addClass("completed"):this.$el.addClass("active")},destroy:function(){this.model.destroy()},toggle:function(){this.model.toggle().save()},onEditClick:function(){this.$el.addClass("editing"),this.ui.edit.focus(),this.ui.edit.val(this.ui.edit.val())},onEditFocusout:function(){var t=this.ui.edit.val().trim();t?(this.model.set("title",t).save(),this.$el.removeClass("editing")):this.destroy()},onEditKeypress:function(t){var e=13,i=27;return t.which===e?(this.onEditFocusout(),void 0):(t.which===i&&this.$el.removeClass("editing"),void 0)}}),t.ListView=i.Marionette.CompositeView.extend({template:"#template-todoListCompositeView",itemView:t.ItemView,itemViewContainer:"#todo-list",ui:{toggle:"#toggle-all"},events:{"click #toggle-all":"onToggleAllClick"},initialize:function(){this.listenTo(this.collection,"all",this.update,this)},onRender:function(){this.update()},update:function(){function t(t,e){return t&&e.get("completed")}var e=this.collection.reduce(t,!0);this.ui.toggle.prop("checked",e),this.$el.parent().toggle(!!this.collection.length)},onToggleAllClick:function(t){var e=t.currentTarget.checked;this.collection.each(function(t){t.save({completed:e})})}}),e.vent.on("todoList:filter",function(t){t=t||"all",s("#todoapp").attr("class","filter-"+t)})}),TodoMVC.module("TodoList",function(t,e,i,n,s,o){t.Router=n.AppRouter.extend({appRoutes:{"*filter":"filterItems"}}),t.Controller=function(){this.todoList=new e.Todos.TodoList},o.extend(t.Controller.prototype,{start:function(){this.showHeader(this.todoList),this.showFooter(this.todoList),this.showTodoList(this.todoList),this.todoList.fetch()},showHeader:function(t){var i=new e.Layout.Header({collection:t});e.header.show(i)},showFooter:function(t){var i=new e.Layout.Footer({collection:t});e.footer.show(i)},showTodoList:function(i){e.main.show(new t.Views.ListView({collection:i}))},filterItems:function(t){e.vent.trigger("todoList:filter",t.trim()||"")}}),t.addInitializer(function(){var e=new t.Controller;e.router=new t.Router({controller:e}),e.start()})});